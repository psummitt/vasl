name: Pre-Push Check

on:
  push:
    branches:
      - master

jobs:
  pre-push-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bash
        uses: rlespinasse/github-slug-action@v5

      - name: Ensure version was incremented properly
        run: |
          VERSION=$(grep -oP '(?<=<version>)[^<]+' pom.xml)
          PREV_VERSION=$(git tag --sort=-v:refname | head -n 1)
          
          IFS='.' read -r -a CURR_PARTS <<< "$VERSION"
          IFS='.' read -r -a PREV_PARTS <<< "$PREV_VERSION"
          
          if [ "${#CURR_PARTS[@]}" -ne 3 ] || [ "${#PREV_PARTS[@]}" -ne 3 ]; then
            echo "Error: Version format is incorrect. Expected format is x.y.z."
            exit 1
          fi
          
          if [ "${CURR_PARTS[0]}" -lt "${PREV_PARTS[0]}" ] ||
             { [ "${CURR_PARTS[0]}" -eq "${PREV_PARTS[0]}" ] && [ "${CURR_PARTS[1]}" -lt "${PREV_PARTS[1]}" ]; } ||
             { [ "${CURR_PARTS[0]}" -eq "${PREV_PARTS[0]}" ] && [ "${CURR_PARTS[1]}" -eq "${PREV_PARTS[1]}" ] && [ "${CURR_PARTS[2]}" -le "${PREV_PARTS[2]}" ]; }; then
            echo "Error: Version $VERSION is not properly incremented from previous version $PREV_VERSION."
            exit 1
          fi

      - name: Check for Whats New PDF
        run: |
          VERSION=$(grep -oP '(?<=<version>)[^<]+' pom.xml)
          PDF_FILE="dist/Whats New VASL${VERSION}.pdf"
          if [[ ! -f "$PDF_FILE" ]]; then
            echo "Error: $PDF_FILE not found."
            exit 1
          fi

      - name: Run pre-push script
        run: |
          chmod +x ./scripts/test_pre_push.sh
          ./scripts/test_pre_push.sh

      - name: Commit new release info to vasl/website
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone https://github.com/vasl/website.git
          cd website
          echo "New release VASL $VERSION" >> releases.md
          echo "[Download Whats New VASL${VERSION}.pdf](https://github.com/vasl/vasl/releases/download/v${VERSION}/Whats New VASL${VERSION}.pdf)" >> releases.md
          git add releases.md
          git commit -m "Add new release VASL $VERSION"
